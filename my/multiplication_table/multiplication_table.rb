=begin
Multiplication Table by Vladislav Trotsenko.
=end


class Number
  def self.new
    rand(2..9)
  end
end

puts '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è:'
name = gets.chomp
puts "–ü—Ä–∏–≤–µ—Ç, #{name}! –î–∞–≤–∞–π –ø–æ–≤—Ç—Ä–æ–∏–º —Ç–∞–±–ª–∏—á–∫—É —É–º–Ω–æ–∂–µ–Ω–∏—è :)"

questions = answers = 0
  wrong_answers, right_answers_in_a_row, medals = [], 0, ''
    until questions == 10 do
      num1, num2 = Number.new, Number.new
        right_answer, answer = num1*num2, ''
          puts "=> #{num1} x #{num2} ="
            answer = gets.chomp while answer.match(/\D/) || answer == ''
              if answer.to_i == right_answer
                right_answers_in_a_row+=1
                  answers+=1
                    informer = case right_answers_in_a_row
                                when 5 then '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!'
                                when 10 then "#{name}, —É —Ç–µ–±—è –æ—Ç–ª–∏—á–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç!"
                                when 15, 20, 25 then medals << 'üéñ' and "#{name}, –í—ã –Ω–∞–≥—Ä–∞–∂–¥–∞–µ—Ç–µ—Å—å –º–µ–¥–∞–ª—å–∫–æ–π üéñ"
                                when 30 then "#{name}, —è –≤–∏–∂—É —Ç—ã –∑–Ω–∞—à—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è :)"
                                else '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!'
                              end
                    puts informer
              else
                right_answers_in_a_row = 0
                  puts "–û—à–∏–±–∫–∞! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: #{right_answer}"
                wrong_answers << "#{num1} x #{num2}"
              end
      questions+=1
    end

puts "#{name}, —Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –∫—É—Ä—Å #–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è#, —Ç—ã - —É–º–Ω–∏—á–∫–∞!" if questions == answers
puts "–í–æ–ø—Ä–æ—Å–æ–≤: #{questions}, –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: #{answers}. –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ #{medals}"
puts "#{name}, –Ω–∞–¥ —ç—Ç–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –Ω—É–∂–Ω–æ –ø—Ä–∞–±–æ—Ç–∞—Ç—å: #{wrong_answers.uniq}" #empty array